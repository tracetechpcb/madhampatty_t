version: '3.8'

services:
  mariadb:
    build:
      context: .
      dockerfile: Dockerfile.mariadb
    image: img_mariadb:latest  # Custom image name with tag
    container_name: ${MARIADB_CONTAINER_NAME} # Custom container name
    volumes:
      - mariadb_volume:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DB_NAME}

  mongodb:
    build:
      context: .
      dockerfile: Dockerfile.mongodb
    image: img_mongodb:latest  # Custom image name with tag
    container_name: ${MONGODB_CONTAINER_NAME} # Custom container name
    volumes:
      - mongodb_volume:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_AUTH_SOURCE: ${MONGODB_AUTH_SOURCE}  # Specify the authentication database
      MONGO_INITDB_DATABASE: ${MONGODB_DB_NAME}  # Specify the database to be created
    command: mongod --auth  # Enable authentication


  gunicorn:
    build:
      context: .
      dockerfile: Dockerfile.gunicorn
    image: ${GUNICORN_IMAGE_NAME}:latest  # Custom image name with tag
    container_name: ${GUNICORN_CONTAINER_NAME} # Custom container name
    depends_on:
      - ${MARIADB_SERVICE_NAME}
      - ${MONGODB_SERVICE_NAME}
    restart: always
    environment:
      MARIADB_DATABASE_URL: mysql://${MARIADB_ROOT_USERNAME}:${MARIADB_ROOT_PASSWORD}@${MARIADB_SERVICE_NAME}:${MARIADB_PORT}/${MARIADB_DB_NAME}
      MONGODB_DATABASE_URL: mongodb://${MONGODB_ROOT_USERNAME}:${MONGODB_ROOT_PASSWORD}@${MONGODB_SERVICE_NAME}:${MONGODB_PORT}/${MONGODB_DB_NAME}?authSource=${MONGODB_AUTH_SOURCE}
      MONGODB_DB_NAME: ${MONGODB_DB_NAME}
      DEFAULT_APPLICATION_USERNAME: ${DEFAULT_APPLICATION_USERNAME}
      DEFAULT_APPLICATION_PASSWORD: ${DEFAULT_APPLICATION_PASSWORD}
      DEFAULT_APPLICATION_EMAIL: ${DEFAULT_APPLICATION_EMAIL}
      LICENSE_KEY: ${LICENSE_KEY}

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: ${NGINX_IMAGE_NAME}:latest  # Custom image name with tag
    container_name: ${NGINX_CONTAINER_NAME} # Custom container name
    volumes:
      - nginx_volume:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - ${GUNICORN_SERVICE_NAME}
    restart: always
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}

  react:
    build:
      context: .
      dockerfile: Dockerfile.react  # You need to create this Dockerfile
    image: ${REACT_IMAGE_NAME}:latest
    container_name: ${REACT_CONTAINER_NAME}
    volumes:
      - nginx_volume:/usr/share/nginx/html  # Serve your static files from here
    restart: always
    depends_on:
      - ${NGINX_SERVICE_NAME}


volumes:
  mariadb_volume:
    name: mariadb_volume
  mongodb_volume:
    name: mongodb_volume
  nginx_volume:
    name: nginx_volume